{"ast":null,"code":"const API_KEY = \"039085608fe94c2eb4c476cb202f9488\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + infoType);\n  url.search = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  return fetch(url).then(res => res.json());\n};\nconst formatCurrentWeather = data => {\n  const {\n    coord: {\n      lat,\n      lon\n    },\n    main: {\n      temp,\n      feels_like,\n      temp_min,\n      temp_max,\n      humidity\n    },\n    sys: {\n      country\n    },\n    weather\n  } = data;\n  const {\n    main: details,\n    icon\n  } = weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    country,\n    details,\n    icon\n  };\n};\nconst getFormattedWeather = async searchParams => {\n  const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(data => formatCurrentWeather(data));\n  const {\n    lat,\n    lon\n  } = formattedCurrentWeather;\n  const formattedForecastCurrentWeather = await getWeatherData('onecall');\n  return formattedCurrentWeather;\n};\nexport default getFormattedWeather;","map":{"version":3,"names":["API_KEY","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","formatCurrentWeather","data","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","humidity","sys","country","weather","details","icon","getFormattedWeather","formattedCurrentWeather","formattedForecastCurrentWeather"],"sources":["/home/shant/weather/src/services/weatherservice.js"],"sourcesContent":["const API_KEY = \"039085608fe94c2eb4c476cb202f9488\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n  return fetch(url)\n    .then((res) => res.json())\n    \n};\nconst formatCurrentWeather = (data) => {\n    const {\n        coord: {lat,lon},\n        main: {temp, feels_like,\n             temp_min,\n              temp_max,\n               humidity\n               },\n               sys:{country},\n               weather,\n\n    } = data\n\n    const {main: details,icon}=weather[0]\n\n    return{lat,lon,temp,feels_like,temp_min,temp_max,humidity,country,details,icon,}\n\n}\nconst getFormattedWeather = async(searchParams) => {\n    const formattedCurrentWeather = await getWeatherData('weather',searchParams)\n    .then(data => formatCurrentWeather(data))\n\n    const {lat,lon}=formattedCurrentWeather\n    const formattedForecastCurrentWeather = await getWeatherData('onecall')\n\n\n\n\n\nreturn formattedCurrentWeather;\n}\nexport default getFormattedWeather\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,0CAA0C;AAE3D,MAAMC,cAAc,GAAG,CAACC,QAAQ,EAAEC,YAAY,KAAK;EACjD,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACL,QAAQ,GAAGE,QAAQ,CAAC;EACxCE,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAE,GAAGJ,YAAY;IAAEK,KAAK,EAAET;EAAQ,CAAC,CAAC;EACrE,OAAOU,KAAK,CAACL,GAAG,CAAC,CACdM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAE9B,CAAC;AACD,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;EACnC,MAAM;IACFC,KAAK,EAAE;MAACC,GAAG;MAACC;IAAG,CAAC;IAChBC,IAAI,EAAE;MAACC,IAAI;MAAEC,UAAU;MAClBC,QAAQ;MACPC,QAAQ;MACPC;IACA,CAAC;IACDC,GAAG,EAAC;MAACC;IAAO,CAAC;IACbC;EAEX,CAAC,GAAGZ,IAAI;EAER,MAAM;IAACI,IAAI,EAAES,OAAO;IAACC;EAAI,CAAC,GAACF,OAAO,CAAC,CAAC,CAAC;EAErC,OAAM;IAACV,GAAG;IAACC,GAAG;IAACE,IAAI;IAACC,UAAU;IAACC,QAAQ;IAACC,QAAQ;IAACC,QAAQ;IAACE,OAAO;IAACE,OAAO;IAACC;EAAK,CAAC;AAEpF,CAAC;AACD,MAAMC,mBAAmB,GAAG,MAAM1B,YAAY,IAAK;EAC/C,MAAM2B,uBAAuB,GAAG,MAAM7B,cAAc,CAAC,SAAS,EAACE,YAAY,CAAC,CAC3EO,IAAI,CAACI,IAAI,IAAID,oBAAoB,CAACC,IAAI,CAAC,CAAC;EAEzC,MAAM;IAACE,GAAG;IAACC;EAAG,CAAC,GAACa,uBAAuB;EACvC,MAAMC,+BAA+B,GAAG,MAAM9B,cAAc,CAAC,SAAS,CAAC;EAM3E,OAAO6B,uBAAuB;AAC9B,CAAC;AACD,eAAeD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}